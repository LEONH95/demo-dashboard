{"version":3,"sources":["app/modules/wizards/components/steps/Step1.tsx","app/modules/wizards/components/steps/Step2.tsx","app/modules/wizards/components/steps/Step3.tsx","app/modules/wizards/components/steps/Step4.tsx","app/modules/wizards/components/steps/Step5.tsx","app/modules/wizards/components/CreateAccountWizardHelper.ts","app/modules/wizards/components/Vertical.tsx","app/modules/wizards/components/Horizontal.tsx","app/modules/wizards/WizardsPage.tsx"],"names":["Step1","className","title","href","type","name","value","id","htmlFor","path","Step2","Step3","as","rows","Step4","placeholder","src","toAbsoluteUrl","alt","minLength","maxLength","checked","Step5","to","createAccountSchemas","Yup","accountType","required","label","accountName","businessName","businessDescriptor","businessType","businessEmail","nameOnCard","cardNumber","cardExpiryMonth","cardExpiryYear","cardCvv","inits","accountTeamSize","accountPlan","businessDescription","saveCard","Vertical","stepperRef","useRef","stepper","useState","currentSchema","setCurrentSchema","initValues","prevStep","current","goPrev","currentStepIndex","useEffect","StepperComponent","createInsance","ref","validationSchema","initialValues","onSubmit","values","actions","totatStepsNumber","goNext","goto","resetForm","noValidate","onClick","Horizontal","isSubmitButton","setSubmitButton","wizardsBreadCrumbs","isSeparator","isActive","WizardsPage","breadcrumbs","from","exact"],"mappings":"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","file":"static/js/7.2b864cc5.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {FC} from 'react'\nimport {KTSVG} from '../../../../../_metronic/helpers'\nimport {Field, ErrorMessage} from 'formik'\n\nconst Step1: FC = () => {\n  return (\n    <div className='w-100'>\n      <div className='pb-10 pb-lg-15'>\n        <h2 className='fw-bolder d-flex align-items-center text-dark'>\n          Choose Account Type\n          <i\n            className='fas fa-exclamation-circle ms-2 fs-7'\n            data-bs-toggle='tooltip'\n            title='Billing is issued based on your selected account type'\n          ></i>\n        </h2>\n\n        <div className='text-gray-400 fw-bold fs-6'>\n          If you need more info, please check out\n          <a href='/dashboard' className='link-primary fw-bolder'>\n            {' '}\n            Help Page\n          </a>\n          .\n        </div>\n      </div>\n\n      <div className='fv-row'>\n        <div className='row'>\n          <div className='col-lg-6'>\n            <Field\n              type='radio'\n              className='btn-check'\n              name='accountType'\n              value='personal'\n              id='kt_create_account_form_account_type_personal'\n            />\n            <label\n              className='btn btn-outline btn-outline-dashed btn-outline-default p-7 d-flex align-items-center mb-10'\n              htmlFor='kt_create_account_form_account_type_personal'\n            >\n              <KTSVG\n                path='/media/icons/duotune/communication/com005.svg'\n                className='svg-icon-3x me-5'\n              />\n\n              <span className='d-block fw-bold text-start'>\n                <span className='text-dark fw-bolder d-block fs-4 mb-2'>Personal Account</span>\n                <span className='text-gray-400 fw-bold fs-6'>\n                  If you need more info, please check it out\n                </span>\n              </span>\n            </label>\n          </div>\n\n          <div className='col-lg-6'>\n            <Field\n              type='radio'\n              className='btn-check'\n              name='accountType'\n              value='corporate'\n              id='kt_create_account_form_account_type_corporate'\n            />\n            <label\n              className='btn btn-outline btn-outline-dashed btn-outline-default p-7 d-flex align-items-center'\n              htmlFor='kt_create_account_form_account_type_corporate'\n            >\n              <KTSVG path='/media/icons/duotune/finance/fin006.svg' className='svg-icon-3x me-5' />\n\n              <span className='d-block fw-bold text-start'>\n                <span className='text-dark fw-bolder d-block fs-4 mb-2'>Corporate Account</span>\n                <span className='text-gray-400 fw-bold fs-6'>\n                  Create corporate account to mane users\n                </span>\n              </span>\n            </label>\n          </div>\n\n          <div className='text-danger mt-2'>\n            <ErrorMessage name='accountType' />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Step1}\n","import React, {FC} from 'react'\nimport {KTSVG} from '../../../../../_metronic/helpers'\nimport {Field, ErrorMessage} from 'formik'\n\nconst Step2: FC = () => {\n  return (\n    <div className='w-100'>\n      <div className='pb-10 pb-lg-15'>\n        <h2 className='fw-bolder text-dark'>Account Info</h2>\n\n        <div className='text-gray-400 fw-bold fs-6'>\n          If you need more info, please check out\n          <a href='/dashboard' className='link-primary fw-bolder'>\n            {' '}\n            Help Page\n          </a>\n          .\n        </div>\n      </div>\n\n      <div className='mb-10 fv-row'>\n        <label className='d-flex align-items-center form-label mb-3'>\n          Specify Team Size\n          <i\n            className='fas fa-exclamation-circle ms-2 fs-7'\n            data-bs-toggle='tooltip'\n            title='Provide your team size to help us setup your billing'\n          ></i>\n        </label>\n\n        <div className='row mb-2' data-kt-buttons='true'>\n          <div className='col'>\n            <Field\n              type='radio'\n              className='btn-check'\n              name='accountTeamSize'\n              value='1-1'\n              id='kt_account_team_size_select_1'\n            />\n            <label\n              className='btn btn-outline btn-outline-dashed btn-outline-default w-100 p-4'\n              htmlFor='kt_account_team_size_select_1'\n            >\n              <span className='fw-bolder fs-3'>1-1</span>\n            </label>\n          </div>\n\n          <div className='col'>\n            <Field\n              type='radio'\n              className='btn-check'\n              name='accountTeamSize'\n              value='2-10'\n              id='kt_account_team_size_select_2'\n            />\n            <label\n              className='btn btn-outline btn-outline-dashed btn-outline-default w-100 p-4'\n              htmlFor='kt_account_team_size_select_2'\n            >\n              <span className='fw-bolder fs-3'>2-10</span>\n            </label>\n          </div>\n\n          <div className='col'>\n            <Field\n              type='radio'\n              className='btn-check'\n              name='accountTeamSize'\n              value='10-50'\n              id='kt_account_team_size_select_3'\n            />\n            <label\n              className='btn btn-outline btn-outline-dashed btn-outline-default w-100 p-4'\n              htmlFor='kt_account_team_size_select_3'\n            >\n              <span className='fw-bolder fs-3'>10-50</span>\n            </label>\n          </div>\n\n          <div className='col'>\n            <Field\n              type='radio'\n              className='btn-check'\n              name='accountTeamSize'\n              value='50+'\n              id='kt_account_team_size_select_4'\n            />\n            <label\n              className='btn btn-outline btn-outline-dashed btn-outline-default w-100 p-4'\n              htmlFor='kt_account_team_size_select_4'\n            >\n              <span className='fw-bolder fs-3'>50+</span>\n            </label>\n          </div>\n        </div>\n\n        <div className='form-text'>\n          Customers will see this shortened version of your statement descriptor\n        </div>\n      </div>\n\n      <div className='mb-10 fv-row'>\n        <label className='form-label mb-3'>Team Account Name</label>\n\n        <Field\n          type='text'\n          className='form-control form-control-lg form-control-solid'\n          name='accountName'\n        />\n        <div className='text-danger mt-2'>\n          <ErrorMessage name='accountName' />\n        </div>\n      </div>\n\n      <div className='mb-0 fv-row'>\n        <label className='d-flex align-items-center form-label mb-5'>\n          Select Account Plan\n          <i\n            className='fas fa-exclamation-circle ms-2 fs-7'\n            data-bs-toggle='tooltip'\n            title='Monthly billing will be based on your account plan'\n          ></i>\n        </label>\n\n        <div className='mb-0'>\n          <label className='d-flex flex-stack mb-5 cursor-pointer'>\n            <span className='d-flex align-items-center me-2'>\n              <span className='symbol symbol-50px me-6'>\n                <span className='symbol-label'>\n                  <KTSVG\n                    path='/media/icons/duotune/finance/fin001.svg'\n                    className='svg-icon-1 svg-icon-gray-600'\n                  />\n                </span>\n              </span>\n\n              <span className='d-flex flex-column'>\n                <span className='fw-bolder text-gray-800 text-hover-primary fs-5'>\n                  Company Account\n                </span>\n                <span className='fs-6 fw-bold text-gray-400'>\n                  Use images to enhance your post flow\n                </span>\n              </span>\n            </span>\n\n            <span className='form-check form-check-custom form-check-solid'>\n              <Field className='form-check-input' type='radio' name='accountPlan' value='1' />\n            </span>\n          </label>\n\n          <label className='d-flex flex-stack mb-5 cursor-pointer'>\n            <span className='d-flex align-items-center me-2'>\n              <span className='symbol symbol-50px me-6'>\n                <span className='symbol-label'>\n                  <KTSVG\n                    path='/media/icons/duotune/graphs/gra006.svg'\n                    className='svg-icon-1 svg-icon-gray-600'\n                  />\n                </span>\n              </span>\n\n              <span className='d-flex flex-column'>\n                <span className='fw-bolder text-gray-800 text-hover-primary fs-5'>\n                  Developer Account\n                </span>\n                <span className='fs-6 fw-bold text-gray-400'>Use images to your post time</span>\n              </span>\n            </span>\n\n            <span className='form-check form-check-custom form-check-solid'>\n              <Field className='form-check-input' type='radio' name='accountPlan' value='2' />\n            </span>\n          </label>\n\n          <label className='d-flex flex-stack mb-0 cursor-pointer'>\n            <span className='d-flex align-items-center me-2'>\n              <span className='symbol symbol-50px me-6'>\n                <span className='symbol-label'>\n                  <KTSVG\n                    path='/media/icons/duotune/graphs/gra008.svg'\n                    className='svg-icon-1 svg-icon-gray-600'\n                  />\n                </span>\n              </span>\n\n              <span className='d-flex flex-column'>\n                <span className='fw-bolder text-gray-800 text-hover-primary fs-5'>\n                  Testing Account\n                </span>\n                <span className='fs-6 fw-bold text-gray-400'>\n                  Use images to enhance time travel rivers\n                </span>\n              </span>\n            </span>\n\n            <span className='form-check form-check-custom form-check-solid'>\n              <Field className='form-check-input' type='radio' name='accountPlan' value='3' />\n            </span>\n          </label>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Step2}\n","import React, {FC} from 'react'\nimport {Field, ErrorMessage} from 'formik'\n\nconst Step3: FC = () => {\n  return (\n    <div className='w-100'>\n      <div className='pb-10 pb-lg-12'>\n        <h2 className='fw-bolder text-dark'>Business Details</h2>\n\n        <div className='text-gray-400 fw-bold fs-6'>\n          If you need more info, please check out\n          <a href='/dashboard' className='link-primary fw-bolder'>\n            {' '}\n            Help Page\n          </a>\n          .\n        </div>\n      </div>\n\n      <div className='fv-row mb-10'>\n        <label className='form-label required'>Business Name</label>\n\n        <Field name='businessName' className='form-control form-control-lg form-control-solid' />\n        <div className='text-danger mt-2'>\n          <ErrorMessage name='businessName' />\n        </div>\n      </div>\n\n      <div className='fv-row mb-10'>\n        <label className='d-flex align-items-center form-label'>\n          <span className='required'>Shortened Descriptor</span>\n        </label>\n\n        <Field\n          name='businessDescriptor'\n          className='form-control form-control-lg form-control-solid'\n        />\n        <div className='text-danger mt-2'>\n          <ErrorMessage name='businessDescriptor' />\n        </div>\n\n        <div className='form-text'>\n          Customers will see this shortened version of your statement descriptor\n        </div>\n      </div>\n\n      <div className='fv-row mb-10'>\n        <label className='form-label required'>Corporation Type</label>\n\n        <Field\n          as='select'\n          name='businessType'\n          className='form-select form-select-lg form-select-solid'\n        >\n          <option></option>\n          <option value='1'>S Corporation</option>\n          <option value='1'>C Corporation</option>\n          <option value='2'>Sole Proprietorship</option>\n          <option value='3'>Non-profit</option>\n          <option value='4'>Limited Liability</option>\n          <option value='5'>General Partnership</option>\n        </Field>\n        <div className='text-danger mt-2'>\n          <ErrorMessage name='businessType' />\n        </div>\n      </div>\n\n      <div className='fv-row mb-10'>\n        <label className='form-label'>Business Description</label>\n\n        <Field\n          as='textarea'\n          name='businessDescription'\n          className='form-control form-control-lg form-control-solid'\n          rows={3}\n        ></Field>\n      </div>\n\n      <div className='fv-row mb-0'>\n        <label className='fs-6 fw-bold form-label required'>Contact Email</label>\n\n        <Field name='businessEmail' className='form-control form-control-lg form-control-solid' />\n        <div className='text-danger mt-2'>\n          <ErrorMessage name='businessEmail' />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Step3}\n","import React, {FC} from 'react'\nimport {KTSVG, toAbsoluteUrl} from '../../../../../_metronic/helpers'\nimport {Field, ErrorMessage} from 'formik'\n\nconst Step4: FC = () => {\n  return (\n    <div className='w-100'>\n      <div className='pb-10 pb-lg-15'>\n        <h2 className='fw-bolder text-dark'>Billing Details</h2>\n\n        <div className='text-gray-400 fw-bold fs-6'>\n          If you need more info, please check out\n          <a href='/dashboard' className='text-primary fw-bolder'>\n            {' '}\n            Help Page\n          </a>\n          .\n        </div>\n      </div>\n\n      <div className='d-flex flex-column mb-7 fv-row'>\n        <label className='d-flex align-items-center fs-6 fw-bold form-label mb-2'>\n          <span className='required'>Name On Card</span>\n          <i\n            className='fas fa-exclamation-circle ms-2 fs-7'\n            data-bs-toggle='tooltip'\n            title=\"Specify a card holder's name\"\n          ></i>\n        </label>\n\n        <Field\n          type='text'\n          className='form-control form-control-solid'\n          placeholder=''\n          name='nameOnCard'\n        />\n        <div className='text-danger mt-2'>\n          <ErrorMessage name='nameOnCard' />\n        </div>\n      </div>\n\n      <div className='d-flex flex-column mb-7 fv-row'>\n        <label className='required fs-6 fw-bold form-label mb-2'>Card Number</label>\n\n        <div className='position-relative'>\n          <Field\n            type='text'\n            className='form-control form-control-solid'\n            placeholder='Enter card number'\n            name='cardNumber'\n          />\n          <div className='text-danger mt-2'>\n            <ErrorMessage name='cardNumber' />\n          </div>\n\n          <div className='position-absolute translate-middle-y top-50 end-0 me-5'>\n            <img src={toAbsoluteUrl('/media/svg/card-logos/visa.svg')} alt='' className='h-25px' />\n            <img\n              src={toAbsoluteUrl('/media/svg/card-logos/mastercard.svg')}\n              alt=''\n              className='h-25px'\n            />\n            <img\n              src={toAbsoluteUrl('/media/svg/card-logos/american-express.svg')}\n              alt=''\n              className='h-25px'\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className='row mb-10'>\n        <div className='col-md-8 fv-row'>\n          <label className='required fs-6 fw-bold form-label mb-2'>Expiration Date</label>\n\n          <div className='row fv-row'>\n            <div className='col-6'>\n              <Field as='select' name='cardExpiryMonth' className='form-select form-select-solid'>\n                <option></option>\n                <option value='1'>1</option>\n                <option value='2'>2</option>\n                <option value='3'>3</option>\n                <option value='4'>4</option>\n                <option value='5'>5</option>\n                <option value='6'>6</option>\n                <option value='7'>7</option>\n                <option value='8'>8</option>\n                <option value='9'>9</option>\n                <option value='10'>10</option>\n                <option value='11'>11</option>\n                <option value='12'>12</option>\n              </Field>\n              <div className='text-danger mt-2'>\n                <ErrorMessage name='cardExpiryMonth' />\n              </div>\n            </div>\n\n            <div className='col-6'>\n              <Field as='select' name='cardExpiryYear' className='form-select form-select-solid'>\n                <option></option>\n                <option value='2021'>2021</option>\n                <option value='2022'>2022</option>\n                <option value='2023'>2023</option>\n                <option value='2024'>2024</option>\n                <option value='2025'>2025</option>\n                <option value='2026'>2026</option>\n                <option value='2027'>2027</option>\n                <option value='2028'>2028</option>\n                <option value='2029'>2029</option>\n                <option value='2030'>2030</option>\n                <option value='2031'>2031</option>\n              </Field>\n              <div className='text-danger mt-2'>\n                <ErrorMessage name='cardExpiryYear' />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className='col-md-4 fv-row'>\n          <label className='d-flex align-items-center fs-6 fw-bold form-label mb-2'>\n            <span className='required'>CVV</span>\n            <i\n              className='fas fa-exclamation-circle ms-2 fs-7'\n              data-bs-toggle='tooltip'\n              title='Enter a card CVV code'\n            ></i>\n          </label>\n\n          <div className='position-relative'>\n            <Field\n              type='text'\n              className='form-control form-control-solid'\n              minLength={3}\n              maxLength={4}\n              placeholder='CVV'\n              name='cardCvv'\n            />\n            <div className='text-danger mt-2'>\n              <ErrorMessage name='cardCvv' />\n            </div>\n\n            <div className='position-absolute translate-middle-y top-50 end-0 me-3'>\n              <KTSVG path='/media/icons/duotune/finance/fin002.svg' className='svg-icon-2hx' />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='d-flex flex-stack'>\n        <div className='me-5'>\n          <label className='fs-6 fw-bold form-label'>Save Card for further billing?</label>\n          <div className='fs-7 fw-bold text-gray-400'>\n            If you need more info, please check budget planning\n          </div>\n        </div>\n\n        <label className='form-check form-switch form-check-custom form-check-solid'>\n          <Field className='form-check-input' type='checkbox' value='1' checked={true} />\n          <span className='form-check-label fw-bold text-gray-400'>Save Card</span>\n        </label>\n      </div>\n    </div>\n  )\n}\n\nexport {Step4}\n","import React, {FC} from 'react'\nimport {KTSVG} from '../../../../../_metronic/helpers'\nimport {Link} from 'react-router-dom'\n\nconst Step5: FC = () => {\n  return (\n    <div className='w-100'>\n      <div className='pb-8 pb-lg-10'>\n        <h2 className='fw-bolder text-dark'>Your Are Done!</h2>\n\n        <div className='text-gray-400 fw-bold fs-6'>\n          If you need more info, please\n          <Link to='/auth/login' className='link-primary fw-bolder'>\n            {' '}\n            Sign In\n          </Link>\n          .\n        </div>\n      </div>\n\n      <div className='mb-0'>\n        <div className='fs-6 text-gray-600 mb-5'>\n          Writing headlines for blog posts is as much an art as it is a science and probably\n          warrants its own post, but for all advise is with what works for your great & amazing\n          audience.\n        </div>\n\n        <div className='notice d-flex bg-light-warning rounded border-warning border border-dashed p-6'>\n          <KTSVG\n            path='/media/icons/duotune/general/gen044.svg'\n            className='svg-icon-2tx svg-icon-warning me-4'\n          />\n          <div className='d-flex flex-stack flex-grow-1'>\n            <div className='fw-bold'>\n              <h4 className='text-gray-800 fw-bolder'>We need your attention!</h4>\n              <div className='fs-6 text-gray-600'>\n                To start using great tools, please, please\n                <a href='/dashboard' className='fw-bolder'>\n                  {' '}\n                  Create Team Platform\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Step5}\n","import * as Yup from 'yup'\n\nexport interface ICreateAccount {\n  accountType: string\n  accountTeamSize: string\n  accountName: string\n  accountPlan: string\n  businessName: string\n  businessDescriptor: string\n  businessType: string\n  businessDescription: string\n  businessEmail: string\n  nameOnCard: string\n  cardNumber: string\n  cardExpiryMonth: string\n  cardExpiryYear: string\n  cardCvv: string\n  saveCard: string\n}\n\nconst createAccountSchemas = [\n  Yup.object({\n    accountType: Yup.string().required().label('Account Type'),\n  }),\n  Yup.object({\n    accountName: Yup.string().required().label('Account Name'),\n  }),\n  Yup.object({\n    businessName: Yup.string().required().label('Business Name'),\n    businessDescriptor: Yup.string().required().label('Shortened Descriptor'),\n    businessType: Yup.string().required().label('Corporation Type'),\n    businessEmail: Yup.string().required().label('Contact Email'),\n  }),\n  Yup.object({\n    nameOnCard: Yup.string().required().label('Name On Card'),\n    cardNumber: Yup.string().required().label('Card Number'),\n    cardExpiryMonth: Yup.string().required().label('Expiration Month'),\n    cardExpiryYear: Yup.string().required().label('Expiration Year'),\n    cardCvv: Yup.string().required().label('CVV'),\n  }),\n]\n\nconst inits: ICreateAccount = {\n  accountType: 'personal',\n  accountTeamSize: '50+',\n  accountName: '',\n  accountPlan: '1',\n  businessName: 'Keenthemes Inc.',\n  businessDescriptor: 'KEENTHEMES',\n  businessType: '1',\n  businessDescription: '',\n  businessEmail: 'corp@support.com',\n  nameOnCard: 'Max Doe',\n  cardNumber: '4111 1111 1111 1111',\n  cardExpiryMonth: '1',\n  cardExpiryYear: '2025',\n  cardCvv: '123',\n  saveCard: '1',\n}\n\nexport {createAccountSchemas, inits}\n","import React, {FC, useEffect, useRef, useState} from 'react'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport {Step1} from './steps/Step1'\nimport {Step2} from './steps/Step2'\nimport {Step3} from './steps/Step3'\nimport {Step4} from './steps/Step4'\nimport {Step5} from './steps/Step5'\nimport {StepperComponent} from '../../../../_metronic/assets/ts/components'\nimport {Formik, Form, FormikValues} from 'formik'\nimport {ICreateAccount, createAccountSchemas, inits} from './CreateAccountWizardHelper'\n\nconst Vertical: FC = () => {\n  const stepperRef = useRef<HTMLDivElement | null>(null)\n  const stepper = useRef<StepperComponent | null>(null)\n  const [currentSchema, setCurrentSchema] = useState(createAccountSchemas[0])\n  const [initValues] = useState<ICreateAccount>(inits)\n\n  const loadStepper = () => {\n    stepper.current = StepperComponent.createInsance(stepperRef.current as HTMLDivElement)\n  }\n\n  const prevStep = () => {\n    if (!stepper.current) {\n      return\n    }\n\n    stepper.current.goPrev()\n\n    setCurrentSchema(createAccountSchemas[stepper.current.currentStepIndex - 1])\n  }\n\n  const submitStep = (values: ICreateAccount, actions: FormikValues) => {\n    if (!stepper.current) {\n      return\n    }\n\n    setCurrentSchema(createAccountSchemas[stepper.current.currentStepIndex])\n\n    if (stepper.current.currentStepIndex !== stepper.current.totatStepsNumber) {\n      stepper.current.goNext()\n    } else {\n      stepper.current.goto(1)\n      actions.resetForm()\n    }\n  }\n\n  useEffect(() => {\n    if (!stepperRef.current) {\n      return\n    }\n\n    loadStepper()\n  }, [stepperRef])\n\n  return (\n    <div\n      ref={stepperRef}\n      className='stepper stepper-pills stepper-column   d-flex flex-column flex-xl-row flex-row-fluid'\n      id='kt_create_account_stepper'\n    >\n      <div className='d-flex justify-content-center bg-white rounded justify-content-xl-start flex-row-auto w-100 w-xl-300px w-xxl-400px me-9'>\n        <div className='px-6 px-lg-10 px-xxl-15 py-20'>\n          <div className='stepper-nav'>\n            <div className='stepper-item current' data-kt-stepper-element='nav'>\n              <div className='stepper-line w-40px'></div>\n\n              <div className='stepper-icon w-40px h-40px'>\n                <i className='stepper-check fas fa-check'></i>\n                <span className='stepper-number'>1</span>\n              </div>\n\n              <div className='stepper-label'>\n                <h3 className='stepper-title'>Account Type</h3>\n\n                <div className='stepper-desc fw-bold'>Setup Your Account Details</div>\n              </div>\n            </div>\n\n            <div className='stepper-item' data-kt-stepper-element='nav'>\n              <div className='stepper-line w-40px'></div>\n\n              <div className='stepper-icon w-40px h-40px'>\n                <i className='stepper-check fas fa-check'></i>\n                <span className='stepper-number'>2</span>\n              </div>\n\n              <div className='stepper-label'>\n                <h3 className='stepper-title'>Account Settings</h3>\n                <div className='stepper-desc fw-bold'>Setup Your Account Settings</div>\n              </div>\n            </div>\n\n            <div className='stepper-item' data-kt-stepper-element='nav'>\n              <div className='stepper-line w-40px'></div>\n\n              <div className='stepper-icon w-40px h-40px'>\n                <i className='stepper-check fas fa-check'></i>\n                <span className='stepper-number'>3</span>\n              </div>\n\n              <div className='stepper-label'>\n                <h3 className='stepper-title'>Business Info</h3>\n                <div className='stepper-desc fw-bold'>Your Business Related Info</div>\n              </div>\n            </div>\n\n            <div className='stepper-item' data-kt-stepper-element='nav'>\n              <div className='stepper-line w-40px'></div>\n\n              <div className='stepper-icon w-40px h-40px'>\n                <i className='stepper-check fas fa-check'></i>\n                <span className='stepper-number'>4</span>\n              </div>\n\n              <div className='stepper-label'>\n                <h3 className='stepper-title'>Billing Details</h3>\n                <div className='stepper-desc fw-bold'>Set Your Payment Methods</div>\n              </div>\n            </div>\n\n            <div className='stepper-item' data-kt-stepper-element='nav'>\n              <div className='stepper-line w-40px'></div>\n\n              <div className='stepper-icon w-40px h-40px'>\n                <i className='stepper-check fas fa-check'></i>\n                <span className='stepper-number'>5</span>\n              </div>\n\n              <div className='stepper-label'>\n                <h3 className='stepper-title'>Completed</h3>\n                <div className='stepper-desc fw-bold'>Woah, we are here</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='d-flex flex-row-fluid flex-center bg-white rounded'>\n        <Formik validationSchema={currentSchema} initialValues={initValues} onSubmit={submitStep}>\n          {() => (\n            <Form className='py-20 w-100 w-xl-700px px-9' noValidate id='kt_create_account_form'>\n              <div className='current' data-kt-stepper-element='content'>\n                <Step1 />\n              </div>\n\n              <div data-kt-stepper-element='content'>\n                <Step2 />\n              </div>\n\n              <div data-kt-stepper-element='content'>\n                <Step3 />\n              </div>\n\n              <div data-kt-stepper-element='content'>\n                <Step4 />\n              </div>\n\n              <div data-kt-stepper-element='content'>\n                <Step5 />\n              </div>\n\n              <div className='d-flex flex-stack pt-10'>\n                <div className='mr-2'>\n                  <button\n                    onClick={prevStep}\n                    type='button'\n                    className='btn btn-lg btn-light-primary me-3'\n                    data-kt-stepper-action='previous'\n                  >\n                    <KTSVG\n                      path='/media/icons/duotune/arrows/arr063.svg'\n                      className='svg-icon-4 me-1'\n                    />\n                    Back\n                  </button>\n                </div>\n\n                <div>\n                  <button type='submit' className='btn btn-lg btn-primary me-3'>\n                    <span className='indicator-label'>\n                      {stepper.current?.currentStepIndex !==\n                        stepper.current?.totatStepsNumber! - 1 && 'Continue'}\n                      {stepper.current?.currentStepIndex ===\n                        stepper.current?.totatStepsNumber! - 1 && 'Submit'}\n                      <KTSVG\n                        path='/media/icons/duotune/arrows/arr064.svg'\n                        className='svg-icon-3 ms-2 me-0'\n                      />\n                    </span>\n                  </button>\n                </div>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  )\n}\n\nexport {Vertical}\n","import React, {FC, useEffect, useRef, useState} from 'react'\nimport {Step1} from './steps/Step1'\nimport {Step2} from './steps/Step2'\nimport {Step3} from './steps/Step3'\nimport {Step4} from './steps/Step4'\nimport {Step5} from './steps/Step5'\nimport {KTSVG} from '../../../../_metronic/helpers'\nimport {StepperComponent} from '../../../../_metronic/assets/ts/components'\nimport {Formik, Form, FormikValues} from 'formik'\nimport {createAccountSchemas, ICreateAccount, inits} from './CreateAccountWizardHelper'\n\nconst Horizontal: FC = () => {\n  const stepperRef = useRef<HTMLDivElement | null>(null)\n  const stepper = useRef<StepperComponent | null>(null)\n  const [currentSchema, setCurrentSchema] = useState(createAccountSchemas[0])\n  const [initValues] = useState<ICreateAccount>(inits)\n  const [isSubmitButton, setSubmitButton] = useState(false)\n\n  const loadStepper = () => {\n    stepper.current = StepperComponent.createInsance(stepperRef.current as HTMLDivElement)\n  }\n\n  const prevStep = () => {\n    if (!stepper.current) {\n      return\n    }\n\n    setSubmitButton(stepper.current.currentStepIndex === stepper.current.totatStepsNumber! - 1)\n\n    stepper.current.goPrev()\n\n    setCurrentSchema(createAccountSchemas[stepper.current.currentStepIndex - 1])\n  }\n\n  const submitStep = (values: ICreateAccount, actions: FormikValues) => {\n    if (!stepper.current) {\n      return\n    }\n\n    setSubmitButton(stepper.current.currentStepIndex === stepper.current.totatStepsNumber! - 1)\n\n    setCurrentSchema(createAccountSchemas[stepper.current.currentStepIndex])\n\n    if (stepper.current.currentStepIndex !== stepper.current.totatStepsNumber) {\n      stepper.current.goNext()\n    } else {\n      stepper.current.goto(1)\n      actions.resetForm()\n    }\n  }\n\n  useEffect(() => {\n    if (!stepperRef.current) {\n      return\n    }\n\n    loadStepper()\n  }, [stepperRef])\n\n  return (\n    <div className='card'>\n      <div className='card-body'>\n        <div\n          ref={stepperRef}\n          className='stepper stepper-links d-flex flex-column pt-15'\n          id='kt_create_account_stepper'\n        >\n          <div className='stepper-nav mb-5'>\n            <div className='stepper-item current' data-kt-stepper-element='nav'>\n              <h3 className='stepper-title'>Account Type</h3>\n            </div>\n\n            <div className='stepper-item' data-kt-stepper-element='nav'>\n              <h3 className='stepper-title'>Account Info</h3>\n            </div>\n\n            <div className='stepper-item' data-kt-stepper-element='nav'>\n              <h3 className='stepper-title'>Business Info</h3>\n            </div>\n\n            <div className='stepper-item' data-kt-stepper-element='nav'>\n              <h3 className='stepper-title'>Billing Details</h3>\n            </div>\n\n            <div className='stepper-item' data-kt-stepper-element='nav'>\n              <h3 className='stepper-title'>Completed</h3>\n            </div>\n          </div>\n\n          <Formik validationSchema={currentSchema} initialValues={initValues} onSubmit={submitStep}>\n            {() => (\n              <Form className='mx-auto mw-600px w-100 pt-15 pb-10' id='kt_create_account_form'>\n                <div className='current' data-kt-stepper-element='content'>\n                  <Step1 />\n                </div>\n\n                <div data-kt-stepper-element='content'>\n                  <Step2 />\n                </div>\n\n                <div data-kt-stepper-element='content'>\n                  <Step3 />\n                </div>\n\n                <div data-kt-stepper-element='content'>\n                  <Step4 />\n                </div>\n\n                <div data-kt-stepper-element='content'>\n                  <Step5 />\n                </div>\n\n                <div className='d-flex flex-stack pt-15'>\n                  <div className='mr-2'>\n                    <button\n                      onClick={prevStep}\n                      type='button'\n                      className='btn btn-lg btn-light-primary me-3'\n                      data-kt-stepper-action='previous'\n                    >\n                      <KTSVG\n                        path='/media/icons/duotune/arrows/arr063.svg'\n                        className='svg-icon-4 me-1'\n                      />\n                      Back\n                    </button>\n                  </div>\n\n                  <div>\n                    <button type='submit' className='btn btn-lg btn-primary me-3'>\n                      <span className='indicator-label'>\n                        {!isSubmitButton && 'Continue'}\n                        {isSubmitButton && 'Submit'}\n                        <KTSVG\n                          path='/media/icons/duotune/arrows/arr064.svg'\n                          className='svg-icon-3 ms-2 me-0'\n                        />\n                      </span>\n                    </button>\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Horizontal}\n","import React from 'react'\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport {PageLink, PageTitle} from '../../../_metronic/layout/core'\nimport {Vertical} from './components/Vertical'\nimport {Horizontal} from './components/Horizontal'\n\nconst wizardsBreadCrumbs: Array<PageLink> = [\n  {\n    title: 'Wizards',\n    path: '/crafted/pages/wizards/horizontal',\n    isSeparator: false,\n    isActive: false,\n  },\n  {\n    title: '',\n    path: '',\n    isSeparator: true,\n    isActive: false,\n  },\n]\n\nconst WizardsPage: React.FC = () => {\n  return (\n    <Switch>\n      <Route path='/crafted/pages/wizards/horizontal'>\n        <PageTitle breadcrumbs={wizardsBreadCrumbs}>Horizontal</PageTitle>\n        <Horizontal />\n      </Route>\n      <Route path='/crafted/pages/wizards/vertical'>\n        <PageTitle breadcrumbs={wizardsBreadCrumbs}>Vertical</PageTitle>\n        <Vertical />\n      </Route>\n      <Redirect from='/crafted/pages/wizards' exact={true} to='/crafted/pages/wizards/horizontal' />\n      <Redirect to='/crafted/pages/wizards/horizontal' />\n    </Switch>\n  )\n}\n\nexport default WizardsPage\n"],"sourceRoot":""}